/**
 * Description : Implementation of RGBColor class
 * Author      : Anh Tuan Do
 */

#include "RGBColor.h"
#include <iostream>

//------------------------------------------------------------------------------
// Default constructor
//------------------------------------------------------------------------------
RGBColor::RGBColor() : r(0), g(0), b(0) {

}

//------------------------------------------------------------------------------
// Constructor with 1 parameter
//------------------------------------------------------------------------------
RGBColor::RGBColor(float color) : r(color), g(color), b(color) {

}

//------------------------------------------------------------------------------
// Constructor with 3 parameters
//------------------------------------------------------------------------------
RGBColor::RGBColor(float _red, float _green, float _blue) {
  r = _red;
  g = _green;
  b = _blue;
}

//------------------------------------------------------------------------------
// Copy constructor
//------------------------------------------------------------------------------
RGBColor::RGBColor(const RGBColor& color) {
  r = color.r;
  g = color.g;
  b = color.b;
}

//------------------------------------------------------------------------------
// Destructor
//------------------------------------------------------------------------------
RGBColor::~RGBColor() {

}

//------------------------------------------------------------------------------
// Assignment operator
//------------------------------------------------------------------------------
RGBColor& RGBColor::operator=(const RGBColor& color) {
  if (this == &color) {
    return (*this);
  }

  r = color.r;
  g = color.g;
  b = color.b;

  return (*this);
}

//------------------------------------------------------------------------------
// Print out debug information
//------------------------------------------------------------------------------
void RGBColor::print() {
  std::cout << "Color r = " << r << ", g = " << g << ", b = " << b << "\n";
}
