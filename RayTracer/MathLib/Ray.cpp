/**
 * Description : Implementation of the Ray class
 * Author      : Anh Tuan Do
 */

#include "Ray.h"
#include <iostream>
using namespace std;

//------------------------------------------------------------------------------
// Default constructor
//------------------------------------------------------------------------------
Ray::Ray() : o(0, 0, 0), d(0, 0, 0) {

}

//------------------------------------------------------------------------------
// Constructor with the origin and the direction
//------------------------------------------------------------------------------
Ray::Ray(const Point& point, const Vector& vector) {
  o = point;
  d = vector;
}

//------------------------------------------------------------------------------
// Copy constructor
//------------------------------------------------------------------------------
Ray::Ray(const Ray& ray) {
  o = ray.o;
  d = ray.d;
}

//------------------------------------------------------------------------------
// Destructor
//------------------------------------------------------------------------------
Ray::~Ray() {

}

//------------------------------------------------------------------------------
// Assignment operator
//------------------------------------------------------------------------------
Ray& Ray::operator=(const Ray& ray) {
  if (this == &ray) {
    return (*this);
  }

  o = ray.o;
  d = ray.d;

  return (*this);
}

//------------------------------------------------------------------------------
// Debug
//------------------------------------------------------------------------------
void Ray::print() {
  cout << "Ray with origin (" << o.x << ", " << o.y << ", " << o.z << "), "
    << "direction (" << d.x << ", " << d.y << ", " << d.z << ")" << endl;
}
